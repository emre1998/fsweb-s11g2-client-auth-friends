{"ast":null,"code":"import _slicedToArray from\"C:/Users/EMRE CAN/fsweb-s11g2-client-auth-friends/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";export default function useLocalStorage(key,defaultValue){var _useState=useState(function(){// ilk açılışta localstorage okuyoruz\nvar localVal=JSON.parse(localStorage.getItem(key));if(localVal===null){// boşsa default değeri, localStorage'a atıyoruz\n// aynı değeri dönüyoruz\nlocalStorage.setItem(key,JSON.stringify(defaultValue));console.log(\"local boş\",defaultValue);return defaultValue;}else{// localstorage boş değilse\n// defaultValue değerini dönüyoruz\nconsole.log(\"local dolu\",localVal);return localVal;}}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// value değiştiğinde localstorage'a yazıyoruz\n// ve yeni değeri dönüyoruz\nvar setLocalStorage=function setLocalStorage(newValue){localStorage.setItem(key,JSON.stringify(newValue));setValue(newValue);};return[value,setLocalStorage];}","map":{"version":3,"names":["useState","useLocalStorage","key","defaultValue","_useState","localVal","JSON","parse","localStorage","getItem","setItem","stringify","console","log","_useState2","_slicedToArray","value","setValue","setLocalStorage","newValue"],"sources":["C:/Users/EMRE CAN/fsweb-s11g2-client-auth-friends/src/hooks/useLocalStorage.js"],"sourcesContent":["import { useState } from \"react\";\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [value, setValue] = useState(() => {\n    // ilk açılışta localstorage okuyoruz\n    const localVal = JSON.parse(localStorage.getItem(key));\n    if (localVal === null) {\n      // boşsa default değeri, localStorage'a atıyoruz\n      // aynı değeri dönüyoruz\n      localStorage.setItem(key, JSON.stringify(defaultValue));\n      console.log(\"local boş\", defaultValue);\n      return defaultValue;\n    } else {\n      // localstorage boş değilse\n      // defaultValue değerini dönüyoruz\n      console.log(\"local dolu\", localVal);\n      return localVal;\n    }\n  });\n  // value değiştiğinde localstorage'a yazıyoruz\n  // ve yeni değeri dönüyoruz\n  const setLocalStorage = (newValue) => {\n    localStorage.setItem(key, JSON.stringify(newValue));\n    setValue(newValue);\n  };\n\n  return [value, setLocalStorage];\n}\n"],"mappings":"uIAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,cAAe,SAAS,CAAAC,eAAeA,CAACC,GAAG,CAAEC,YAAY,CAAE,CACzD,IAAAC,SAAA,CAA0BJ,QAAQ,CAAC,UAAM,CACvC;AACA,GAAM,CAAAK,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACP,GAAG,CAAC,CAAC,CACtD,GAAIG,QAAQ,GAAK,IAAI,CAAE,CACrB;AACA;AACAG,YAAY,CAACE,OAAO,CAACR,GAAG,CAAEI,IAAI,CAACK,SAAS,CAACR,YAAY,CAAC,CAAC,CACvDS,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEV,YAAY,CAAC,CACtC,MAAO,CAAAA,YAAY,CACrB,CAAC,IAAM,CACL;AACA;AACAS,OAAO,CAACC,GAAG,CAAC,YAAY,CAAER,QAAQ,CAAC,CACnC,MAAO,CAAAA,QAAQ,CACjB,CACF,CAAC,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAX,SAAA,IAfKY,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAgBtB;AACA;AACA,GAAM,CAAAI,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,QAAQ,CAAK,CACpCX,YAAY,CAACE,OAAO,CAACR,GAAG,CAAEI,IAAI,CAACK,SAAS,CAACQ,QAAQ,CAAC,CAAC,CACnDF,QAAQ,CAACE,QAAQ,CAAC,CACpB,CAAC,CAED,MAAO,CAACH,KAAK,CAAEE,eAAe,CAAC,CACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}